; ModuleID = '/home/alin/code/erasure-coding-crust/ec-cpp/ec-cpp.cpp'
source_filename = "/home/alin/code/erasure-coding-crust/ec-cpp/ec-cpp.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"struct.ec_cpp::f2e16_Descriptor" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Tuple_impl.0", %"struct.std::_Head_base.3" }
%"struct.std::_Tuple_impl.0" = type { %"struct.std::_Tuple_impl.1", %"struct.std::_Head_base.2" }
%"struct.std::_Tuple_impl.1" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { %"struct.std::array" }
%"struct.std::array" = type { [65536 x i16] }
%"struct.std::_Head_base.2" = type { %"struct.std::array" }
%"struct.std::_Head_base.3" = type { %"struct.std::array" }
%"struct.ec_cpp::PolyEncoder" = type <{ %"struct.ec_cpp::f2e16_Descriptor"*, %"struct.ec_cpp::AdditiveFFT", [2 x i8] }>
%"struct.ec_cpp::AdditiveFFT" = type { [65535 x i16] }
%"class.std::variant.7" = type { %"struct.std::__detail::__variant::_Variant_base.base.21", [7 x i8] }
%"struct.std::__detail::__variant::_Variant_base.base.21" = type { %"struct.std::__detail::__variant::_Move_assign_base.base.20" }
%"struct.std::__detail::__variant::_Move_assign_base.base.20" = type { %"struct.std::__detail::__variant::_Copy_assign_base.base.19" }
%"struct.std::__detail::__variant::_Copy_assign_base.base.19" = type { %"struct.std::__detail::__variant::_Move_ctor_base.base.18" }
%"struct.std::__detail::__variant::_Move_ctor_base.base.18" = type { %"struct.std::__detail::__variant::_Copy_ctor_base.base.17" }
%"struct.std::__detail::__variant::_Copy_ctor_base.base.17" = type { %"struct.std::__detail::__variant::_Variant_storage.base.16" }
%"struct.std::__detail::__variant::_Variant_storage.base.16" = type <{ %"union.std::__detail::__variant::_Variadic_union.14", i8 }>
%"union.std::__detail::__variant::_Variadic_union.14" = type { %"struct.std::__detail::__variant::_Uninitialized.15" }
%"struct.std::__detail::__variant::_Uninitialized.15" = type { %"struct.ec_cpp::ReedSolomon" }
%"struct.ec_cpp::ReedSolomon" = type { i64, i64, i64, %"struct.ec_cpp::PolyEncoder"* }
%class.anon = type { i8 }
%"struct.ec_cpp::Additive" = type { i16 }

$_ZNK6ec_cpp16f2e16_Descriptor7kTablesMUlvE_clEv = comdat any

$_ZN6ec_cpp11AdditiveFFTINS_16f2e16_DescriptorEE9initalizeERKSt5tupleIJSt5arrayItLm65536EES5_S5_EE = comdat any

@_ZN6ec_cpp16field_descriptorE = global %"struct.ec_cpp::f2e16_Descriptor" zeroinitializer, align 2
@_ZN6ec_cpp12poly_encoderE = global %"struct.ec_cpp::PolyEncoder" zeroinitializer, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_ec_cpp.cpp, i8* null }]

; Function Attrs: mustprogress nofree nosync nounwind readnone uwtable willreturn
define { i64, i8 } @_ZN6ec_cpp20getRecoveryThresholdEm(i64 noundef %0) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %2 = icmp ugt i64 %0, 65536
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = icmp ult i64 %0, 2
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = trunc i64 %0 to i16
  %7 = add i16 %6, -1
  %8 = udiv i16 %7, 3
  %9 = add nuw nsw i16 %8, 1
  %10 = zext i16 %9 to i64
  br label %11

11:                                               ; preds = %3, %1, %5
  %12 = phi i64 [ %10, %5 ], [ 5, %1 ], [ 6, %3 ]
  %13 = phi i8 [ 0, %5 ], [ 1, %1 ], [ 1, %3 ]
  %14 = insertvalue { i64, i8 } poison, i64 %12, 0
  %15 = insertvalue { i64, i8 } %14, i8 %13, 1
  ret { i64, i8 } %15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: uwtable
define void @_ZN6ec_cpp6createEm(%"class.std::variant.7"* noalias nocapture writeonly sret(%"class.std::variant.7") align 8 %0, i64 noundef %1) local_unnamed_addr #2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = icmp ugt i64 %1, 65536
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 2
  br i1 %5, label %6, label %9

6:                                                ; preds = %4, %2
  %7 = phi i32 [ 6, %4 ], [ 5, %2 ]
  %8 = bitcast %"class.std::variant.7"* %0 to i32*
  store i32 %7, i32* %8, align 8, !tbaa !4
  br label %46

9:                                                ; preds = %4
  %10 = trunc i64 %1 to i16
  %11 = add i16 %10, -1
  %12 = icmp ult i16 %11, 3
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = udiv i16 %11, 3
  %15 = add nuw nsw i16 %14, 1
  %16 = lshr i16 %15, 1
  %17 = zext i16 %16 to i64
  %18 = tail call i64 @llvm.ctlz.i64(i64 %17, i1 true) #9, !range !9
  %19 = sub nuw nsw i64 64, %18
  br label %20

20:                                               ; preds = %9, %13
  %21 = phi i64 [ %19, %13 ], [ 0, %9 ]
  %22 = shl nuw i64 1, %21
  %23 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !10
  %24 = icmp ult i64 %23, 2
  br i1 %24, label %40, label %25

25:                                               ; preds = %20
  %26 = tail call i64 @llvm.ctlz.i64(i64 %1, i1 true), !range !10
  %27 = sub nuw nsw i64 64, %26
  %28 = shl nuw i64 1, %27
  %29 = icmp ugt i64 %1, 65535
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.std::variant.7"* %0 to i32*
  store i32 2, i32* %31, align 8, !tbaa !4, !alias.scope !11
  br label %46

32:                                               ; preds = %25
  %33 = tail call i64 @llvm.ctpop.i64(i64 %28) #9, !range !10
  %34 = icmp ult i64 %33, 2
  %35 = tail call i64 @llvm.ctpop.i64(i64 %22) #9, !range !10
  %36 = icmp ult i64 %35, 2
  %37 = select i1 %34, i1 true, i1 %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.std::variant.7"* %0 to i32*
  store i32 0, i32* %39, align 8, !tbaa !4, !alias.scope !11
  br label %46

40:                                               ; preds = %20, %32
  %41 = phi i64 [ %28, %32 ], [ %1, %20 ]
  %42 = getelementptr inbounds %"class.std::variant.7", %"class.std::variant.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %41, i64* %42, align 8, !tbaa.struct !14, !alias.scope !11
  %43 = getelementptr inbounds %"class.std::variant.7", %"class.std::variant.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %43, align 8, !tbaa.struct !19, !alias.scope !11
  %44 = getelementptr inbounds %"class.std::variant.7", %"class.std::variant.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1, i64* %44, align 8, !tbaa.struct !20, !alias.scope !11
  %45 = getelementptr inbounds %"class.std::variant.7", %"class.std::variant.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  store %"struct.ec_cpp::PolyEncoder"* @_ZN6ec_cpp12poly_encoderE, %"struct.ec_cpp::PolyEncoder"** %45, align 8, !tbaa.struct !21, !alias.scope !11
  br label %46

46:                                               ; preds = %40, %38, %30, %6
  %47 = phi i8 [ 1, %6 ], [ 1, %30 ], [ 1, %38 ], [ 0, %40 ]
  %48 = getelementptr inbounds %"class.std::variant.7", %"class.std::variant.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8 %47, i8* %48, align 8, !tbaa !22
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr void @_ZNK6ec_cpp16f2e16_Descriptor7kTablesMUlvE_clEv(%"class.std::tuple"* noalias sret(%"class.std::tuple") align 2 %0, %class.anon* noundef nonnull align 1 dereferenceable(1) %1) local_unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca %"struct.std::array", align 16
  %4 = alloca %"struct.std::array", align 2
  %5 = alloca %"struct.std::array", align 2
  %6 = bitcast %"struct.std::array"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 131072, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 63
  %8 = bitcast i16* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(131072) %8, i8 0, i64 130946, i1 false)
  %9 = bitcast %"struct.std::array"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 131072, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 1
  %11 = bitcast i16* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(131072) %11, i8 0, i64 131070, i1 false)
  br label %362

12:                                               ; preds = %362
  %13 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 0
  store i16 -1, i16* %13, align 2, !tbaa !24
  %14 = bitcast %"struct.std::array"* %3 to <8 x i16>*
  store <8 x i16> <i16 0, i16 1, i16 -21302, i16 -21301, i16 15374, i16 15375, i16 -28476, i16 -28475>, <8 x i16>* %14, align 16, !tbaa !24
  %15 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 8
  %16 = bitcast i16* %15 to <8 x i16>*
  store <8 x i16> <i16 5694, i16 5695, i16 -17676, i16 -17675, i16 10800, i16 10801, i16 -30982, i16 -30981>, <8 x i16>* %16, align 16, !tbaa !24
  %17 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 16
  %18 = bitcast i16* %17 to <8 x i16>*
  store <8 x i16> <i16 -14974, i16 -14973, i16 26952, i16 26953, i16 -1652, i16 -1651, i16 21830, i16 21831>, <8 x i16>* %18, align 16, !tbaa !24
  %19 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 24
  %20 = bitcast i16* %19 to <8 x i16>*
  store <8 x i16> <i16 -11332, i16 -11331, i16 32630, i16 32631, i16 -4174, i16 -4173, i16 17272, i16 17273>, <8 x i16>* %20, align 16, !tbaa !24
  %21 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 32
  %22 = bitcast i16* %21 to <8 x i16>*
  store <8 x i16> <i16 -4818, i16 -4817, i16 16868, i16 16869, i16 -12000, i16 -11999, i16 32234, i16 32235>, <8 x i16>* %22, align 16, !tbaa !24
  %23 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 40
  %24 = bitcast i16* %23 to <8 x i16>*
  store <8 x i16> <i16 -1264, i16 -1263, i16 22490, i16 22491, i16 -14562, i16 -14561, i16 27604, i16 27605>, <8 x i16>* %24, align 16, !tbaa !24
  %25 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 48
  %26 = bitcast i16* %25 to <8 x i16>*
  store <8 x i16> <i16 10412, i16 10413, i16 -31642, i16 -31641, i16 5282, i16 5283, i16 -18328, i16 -18327>, <8 x i16>* %26, align 16, !tbaa !24
  %27 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 56
  %28 = bitcast i16* %27 to <8 x i16>*
  store <8 x i16> <i16 16018, i16 16019, i16 -28072, i16 -28071, i16 668, i16 669, i16 -20906, i16 -20905>, <8 x i16>* %28, align 16, !tbaa !24
  %29 = bitcast %"struct.std::array"* %3 to <8 x i16>*
  %30 = load <8 x i16>, <8 x i16>* %29, align 16, !tbaa !24
  %31 = xor <8 x i16> %30, <i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340>
  %32 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 64
  %33 = bitcast i16* %32 to <8 x i16>*
  store <8 x i16> %31, <8 x i16>* %33, align 16, !tbaa !24
  %34 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 8
  %35 = bitcast i16* %34 to <8 x i16>*
  %36 = load <8 x i16>, <8 x i16>* %35, align 16, !tbaa !24
  %37 = xor <8 x i16> %36, <i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340>
  %38 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 72
  %39 = bitcast i16* %38 to <8 x i16>*
  store <8 x i16> %37, <8 x i16>* %39, align 16, !tbaa !24
  %40 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 16
  %41 = bitcast i16* %40 to <8 x i16>*
  %42 = load <8 x i16>, <8 x i16>* %41, align 16, !tbaa !24
  %43 = xor <8 x i16> %42, <i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340>
  %44 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 80
  %45 = bitcast i16* %44 to <8 x i16>*
  store <8 x i16> %43, <8 x i16>* %45, align 16, !tbaa !24
  %46 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 24
  %47 = bitcast i16* %46 to <8 x i16>*
  %48 = load <8 x i16>, <8 x i16>* %47, align 16, !tbaa !24
  %49 = xor <8 x i16> %48, <i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340>
  %50 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 88
  %51 = bitcast i16* %50 to <8 x i16>*
  store <8 x i16> %49, <8 x i16>* %51, align 16, !tbaa !24
  %52 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 32
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 16, !tbaa !24
  %55 = xor <8 x i16> %54, <i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340>
  %56 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 96
  %57 = bitcast i16* %56 to <8 x i16>*
  store <8 x i16> %55, <8 x i16>* %57, align 16, !tbaa !24
  %58 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 40
  %59 = bitcast i16* %58 to <8 x i16>*
  %60 = load <8 x i16>, <8 x i16>* %59, align 16, !tbaa !24
  %61 = xor <8 x i16> %60, <i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340>
  %62 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 104
  %63 = bitcast i16* %62 to <8 x i16>*
  store <8 x i16> %61, <8 x i16>* %63, align 16, !tbaa !24
  %64 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 48
  %65 = bitcast i16* %64 to <8 x i16>*
  %66 = load <8 x i16>, <8 x i16>* %65, align 16, !tbaa !24
  %67 = xor <8 x i16> %66, <i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340>
  %68 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 112
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %69, align 16, !tbaa !24
  %70 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 56
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 16, !tbaa !24
  %73 = xor <8 x i16> %72, <i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340, i16 -28340>
  %74 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 120
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %75, align 16, !tbaa !24
  %76 = bitcast %"struct.std::array"* %3 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 16, !tbaa !24
  %78 = xor <8 x i16> %77, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %79 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 128
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %80, align 16, !tbaa !24
  %81 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 16, !tbaa !24
  %84 = xor <8 x i16> %83, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %85 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 136
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %86, align 16, !tbaa !24
  %87 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 16
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 16, !tbaa !24
  %90 = xor <8 x i16> %89, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %91 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 144
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %92, align 16, !tbaa !24
  %93 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 24
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 16, !tbaa !24
  %96 = xor <8 x i16> %95, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %97 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 152
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %98, align 16, !tbaa !24
  %99 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 32
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 16, !tbaa !24
  %102 = xor <8 x i16> %101, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %103 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 160
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %104, align 16, !tbaa !24
  %105 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 40
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 16, !tbaa !24
  %108 = xor <8 x i16> %107, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %109 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 168
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %110, align 16, !tbaa !24
  %111 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 48
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 16, !tbaa !24
  %114 = xor <8 x i16> %113, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %115 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 176
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %116, align 16, !tbaa !24
  %117 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 56
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 16, !tbaa !24
  %120 = xor <8 x i16> %119, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %121 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 184
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %122, align 16, !tbaa !24
  %123 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 64
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 16, !tbaa !24
  %126 = xor <8 x i16> %125, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %127 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 192
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %128, align 16, !tbaa !24
  %129 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 72
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 16, !tbaa !24
  %132 = xor <8 x i16> %131, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %133 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 200
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %134, align 16, !tbaa !24
  %135 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 80
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 16, !tbaa !24
  %138 = xor <8 x i16> %137, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %139 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 208
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %140, align 16, !tbaa !24
  %141 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 88
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 16, !tbaa !24
  %144 = xor <8 x i16> %143, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %145 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 216
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %146, align 16, !tbaa !24
  %147 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 96
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 16, !tbaa !24
  %150 = xor <8 x i16> %149, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %151 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 224
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %152, align 16, !tbaa !24
  %153 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 104
  %154 = bitcast i16* %153 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 16, !tbaa !24
  %156 = xor <8 x i16> %155, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %157 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 232
  %158 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %158, align 16, !tbaa !24
  %159 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 112
  %160 = bitcast i16* %159 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 16, !tbaa !24
  %162 = xor <8 x i16> %161, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %163 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 240
  %164 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %164, align 16, !tbaa !24
  %165 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 120
  %166 = bitcast i16* %165 to <8 x i16>*
  %167 = load <8 x i16>, <8 x i16>* %166, align 16, !tbaa !24
  %168 = xor <8 x i16> %167, <i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402, i16 16402>
  %169 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 248
  %170 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %170, align 16, !tbaa !24
  %171 = bitcast %"struct.std::array"* %3 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 16, !tbaa !24
  %173 = xor <8 x i16> %172, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %174 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 256
  %175 = bitcast i16* %174 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %175, align 16, !tbaa !24
  %176 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  %178 = load <8 x i16>, <8 x i16>* %177, align 16, !tbaa !24
  %179 = xor <8 x i16> %178, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %180 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 264
  %181 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %181, align 16, !tbaa !24
  %182 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 16
  %183 = bitcast i16* %182 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 16, !tbaa !24
  %185 = xor <8 x i16> %184, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %186 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 272
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %187, align 16, !tbaa !24
  %188 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 24
  %189 = bitcast i16* %188 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 16, !tbaa !24
  %191 = xor <8 x i16> %190, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %192 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 280
  %193 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %193, align 16, !tbaa !24
  %194 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 32
  %195 = bitcast i16* %194 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 16, !tbaa !24
  %197 = xor <8 x i16> %196, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %198 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 288
  %199 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %197, <8 x i16>* %199, align 16, !tbaa !24
  %200 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 40
  %201 = bitcast i16* %200 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 16, !tbaa !24
  %203 = xor <8 x i16> %202, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %204 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 296
  %205 = bitcast i16* %204 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %205, align 16, !tbaa !24
  %206 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 48
  %207 = bitcast i16* %206 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 16, !tbaa !24
  %209 = xor <8 x i16> %208, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %210 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 304
  %211 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %209, <8 x i16>* %211, align 16, !tbaa !24
  %212 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 56
  %213 = bitcast i16* %212 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 16, !tbaa !24
  %215 = xor <8 x i16> %214, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %216 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 312
  %217 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %217, align 16, !tbaa !24
  %218 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 64
  %219 = bitcast i16* %218 to <8 x i16>*
  %220 = load <8 x i16>, <8 x i16>* %219, align 16, !tbaa !24
  %221 = xor <8 x i16> %220, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %222 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 320
  %223 = bitcast i16* %222 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %223, align 16, !tbaa !24
  %224 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 72
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 16, !tbaa !24
  %227 = xor <8 x i16> %226, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %228 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 328
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %229, align 16, !tbaa !24
  %230 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 80
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 16, !tbaa !24
  %233 = xor <8 x i16> %232, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %234 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 336
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %235, align 16, !tbaa !24
  %236 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 88
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 16, !tbaa !24
  %239 = xor <8 x i16> %238, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %240 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 344
  %241 = bitcast i16* %240 to <8 x i16>*
  store <8 x i16> %239, <8 x i16>* %241, align 16, !tbaa !24
  %242 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 96
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 16, !tbaa !24
  %245 = xor <8 x i16> %244, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %246 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 352
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %247, align 16, !tbaa !24
  %248 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 104
  %249 = bitcast i16* %248 to <8 x i16>*
  %250 = load <8 x i16>, <8 x i16>* %249, align 16, !tbaa !24
  %251 = xor <8 x i16> %250, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %252 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 360
  %253 = bitcast i16* %252 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %253, align 16, !tbaa !24
  %254 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 112
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 16, !tbaa !24
  %257 = xor <8 x i16> %256, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %258 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 368
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %257, <8 x i16>* %259, align 16, !tbaa !24
  %260 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 120
  %261 = bitcast i16* %260 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 16, !tbaa !24
  %263 = xor <8 x i16> %262, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %264 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 376
  %265 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %265, align 16, !tbaa !24
  %266 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 128
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 16, !tbaa !24
  %269 = xor <8 x i16> %268, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %270 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 384
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %271, align 16, !tbaa !24
  %272 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 136
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 16, !tbaa !24
  %275 = xor <8 x i16> %274, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %276 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 392
  %277 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %277, align 16, !tbaa !24
  %278 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 144
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 16, !tbaa !24
  %281 = xor <8 x i16> %280, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %282 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 400
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %283, align 16, !tbaa !24
  %284 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 152
  %285 = bitcast i16* %284 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 16, !tbaa !24
  %287 = xor <8 x i16> %286, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %288 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 408
  %289 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %289, align 16, !tbaa !24
  %290 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 160
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 16, !tbaa !24
  %293 = xor <8 x i16> %292, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %294 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 416
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %295, align 16, !tbaa !24
  %296 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 168
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 16, !tbaa !24
  %299 = xor <8 x i16> %298, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %300 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 424
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %301, align 16, !tbaa !24
  %302 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 176
  %303 = bitcast i16* %302 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 16, !tbaa !24
  %305 = xor <8 x i16> %304, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %306 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 432
  %307 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %307, align 16, !tbaa !24
  %308 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 184
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 16, !tbaa !24
  %311 = xor <8 x i16> %310, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %312 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 440
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %313, align 16, !tbaa !24
  %314 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 192
  %315 = bitcast i16* %314 to <8 x i16>*
  %316 = load <8 x i16>, <8 x i16>* %315, align 16, !tbaa !24
  %317 = xor <8 x i16> %316, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %318 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 448
  %319 = bitcast i16* %318 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %319, align 16, !tbaa !24
  %320 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 200
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 16, !tbaa !24
  %323 = xor <8 x i16> %322, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %324 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 456
  %325 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %323, <8 x i16>* %325, align 16, !tbaa !24
  %326 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 208
  %327 = bitcast i16* %326 to <8 x i16>*
  %328 = load <8 x i16>, <8 x i16>* %327, align 16, !tbaa !24
  %329 = xor <8 x i16> %328, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %330 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 464
  %331 = bitcast i16* %330 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %331, align 16, !tbaa !24
  %332 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 216
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 16, !tbaa !24
  %335 = xor <8 x i16> %334, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %336 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 472
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %335, <8 x i16>* %337, align 16, !tbaa !24
  %338 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 224
  %339 = bitcast i16* %338 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 16, !tbaa !24
  %341 = xor <8 x i16> %340, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %342 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 480
  %343 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %341, <8 x i16>* %343, align 16, !tbaa !24
  %344 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 232
  %345 = bitcast i16* %344 to <8 x i16>*
  %346 = load <8 x i16>, <8 x i16>* %345, align 16, !tbaa !24
  %347 = xor <8 x i16> %346, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %348 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 488
  %349 = bitcast i16* %348 to <8 x i16>*
  store <8 x i16> %347, <8 x i16>* %349, align 16, !tbaa !24
  %350 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 240
  %351 = bitcast i16* %350 to <8 x i16>*
  %352 = load <8 x i16>, <8 x i16>* %351, align 16, !tbaa !24
  %353 = xor <8 x i16> %352, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %354 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 496
  %355 = bitcast i16* %354 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %355, align 16, !tbaa !24
  %356 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 248
  %357 = bitcast i16* %356 to <8 x i16>*
  %358 = load <8 x i16>, <8 x i16>* %357, align 16, !tbaa !24
  %359 = xor <8 x i16> %358, <i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800, i16 27800>
  %360 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 504
  %361 = bitcast i16* %360 to <8 x i16>*
  store <8 x i16> %359, <8 x i16>* %361, align 16, !tbaa !24
  br label %390

362:                                              ; preds = %362, %2
  %363 = phi i64 [ 0, %2 ], [ %388, %362 ]
  %364 = phi i64 [ 1, %2 ], [ %387, %362 ]
  %365 = trunc i64 %363 to i16
  %366 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %364
  store i16 %365, i16* %366, align 2, !tbaa !24
  %367 = icmp ult i64 %364, 32768
  %368 = shl i64 %364, 1
  %369 = and i64 %368, 65534
  %370 = xor i64 %369, 45
  %371 = select i1 %367, i64 %368, i64 %370
  %372 = trunc i64 %363 to i16
  %373 = add i16 %372, 1
  %374 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %371
  store i16 %373, i16* %374, align 2, !tbaa !24
  %375 = icmp ult i64 %371, 32768
  %376 = shl i64 %371, 1
  %377 = and i64 %376, 65534
  %378 = xor i64 %377, 45
  %379 = select i1 %375, i64 %376, i64 %378
  %380 = trunc i64 %363 to i16
  %381 = add i16 %380, 2
  %382 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %379
  store i16 %381, i16* %382, align 2, !tbaa !24
  %383 = icmp ult i64 %379, 32768
  %384 = shl i64 %379, 1
  %385 = and i64 %384, 65534
  %386 = xor i64 %385, 45
  %387 = select i1 %383, i64 %384, i64 %386
  %388 = add nuw nsw i64 %363, 3
  %389 = icmp eq i64 %388, 65535
  br i1 %389, label %12, label %362, !llvm.loop !26

390:                                              ; preds = %390, %12
  %391 = phi i64 [ 0, %12 ], [ %423, %390 ]
  %392 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %391
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 16, !tbaa !24
  %395 = xor <8 x i16> %394, <i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312>
  %396 = add nuw nsw i64 %391, 512
  %397 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %396
  %398 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %395, <8 x i16>* %398, align 16, !tbaa !24
  %399 = or i64 %391, 8
  %400 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %399
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 16, !tbaa !24
  %403 = xor <8 x i16> %402, <i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312>
  %404 = add nuw nsw i64 %391, 520
  %405 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %404
  %406 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %403, <8 x i16>* %406, align 16, !tbaa !24
  %407 = or i64 %391, 16
  %408 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %407
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 16, !tbaa !24
  %411 = xor <8 x i16> %410, <i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312>
  %412 = add nuw nsw i64 %391, 528
  %413 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %412
  %414 = bitcast i16* %413 to <8 x i16>*
  store <8 x i16> %411, <8 x i16>* %414, align 16, !tbaa !24
  %415 = or i64 %391, 24
  %416 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %415
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 16, !tbaa !24
  %419 = xor <8 x i16> %418, <i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312, i16 4312>
  %420 = add nuw nsw i64 %391, 536
  %421 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %420
  %422 = bitcast i16* %421 to <8 x i16>*
  store <8 x i16> %419, <8 x i16>* %422, align 16, !tbaa !24
  %423 = add nuw nsw i64 %391, 32
  %424 = icmp eq i64 %423, 512
  br i1 %424, label %425, label %390, !llvm.loop !28

425:                                              ; preds = %390, %425
  %426 = phi i64 [ %458, %425 ], [ 0, %390 ]
  %427 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %426
  %428 = bitcast i16* %427 to <8 x i16>*
  %429 = load <8 x i16>, <8 x i16>* %428, align 16, !tbaa !24
  %430 = xor <8 x i16> %429, <i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250>
  %431 = add nuw nsw i64 %426, 1024
  %432 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %431
  %433 = bitcast i16* %432 to <8 x i16>*
  store <8 x i16> %430, <8 x i16>* %433, align 16, !tbaa !24
  %434 = or i64 %426, 8
  %435 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %434
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 16, !tbaa !24
  %438 = xor <8 x i16> %437, <i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250>
  %439 = add nuw nsw i64 %426, 1032
  %440 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %439
  %441 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %438, <8 x i16>* %441, align 16, !tbaa !24
  %442 = or i64 %426, 16
  %443 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %442
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 16, !tbaa !24
  %446 = xor <8 x i16> %445, <i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250>
  %447 = add nuw nsw i64 %426, 1040
  %448 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %447
  %449 = bitcast i16* %448 to <8 x i16>*
  store <8 x i16> %446, <8 x i16>* %449, align 16, !tbaa !24
  %450 = or i64 %426, 24
  %451 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %450
  %452 = bitcast i16* %451 to <8 x i16>*
  %453 = load <8 x i16>, <8 x i16>* %452, align 16, !tbaa !24
  %454 = xor <8 x i16> %453, <i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250, i16 27250>
  %455 = add nuw nsw i64 %426, 1048
  %456 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %455
  %457 = bitcast i16* %456 to <8 x i16>*
  store <8 x i16> %454, <8 x i16>* %457, align 16, !tbaa !24
  %458 = add nuw nsw i64 %426, 32
  %459 = icmp eq i64 %458, 1024
  br i1 %459, label %460, label %425, !llvm.loop !30

460:                                              ; preds = %425, %460
  %461 = phi i64 [ %493, %460 ], [ 0, %425 ]
  %462 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %461
  %463 = bitcast i16* %462 to <8 x i16>*
  %464 = load <8 x i16>, <8 x i16>* %463, align 16, !tbaa !24
  %465 = xor <8 x i16> %464, <i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176>
  %466 = add nuw nsw i64 %461, 2048
  %467 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %466
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %468, align 16, !tbaa !24
  %469 = or i64 %461, 8
  %470 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %469
  %471 = bitcast i16* %470 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 16, !tbaa !24
  %473 = xor <8 x i16> %472, <i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176>
  %474 = add nuw nsw i64 %461, 2056
  %475 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %474
  %476 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %476, align 16, !tbaa !24
  %477 = or i64 %461, 16
  %478 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %477
  %479 = bitcast i16* %478 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 16, !tbaa !24
  %481 = xor <8 x i16> %480, <i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176>
  %482 = add nuw nsw i64 %461, 2064
  %483 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %482
  %484 = bitcast i16* %483 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %484, align 16, !tbaa !24
  %485 = or i64 %461, 24
  %486 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %485
  %487 = bitcast i16* %486 to <8 x i16>*
  %488 = load <8 x i16>, <8 x i16>* %487, align 16, !tbaa !24
  %489 = xor <8 x i16> %488, <i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176, i16 -18176>
  %490 = add nuw nsw i64 %461, 2072
  %491 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %490
  %492 = bitcast i16* %491 to <8 x i16>*
  store <8 x i16> %489, <8 x i16>* %492, align 16, !tbaa !24
  %493 = add nuw nsw i64 %461, 32
  %494 = icmp eq i64 %493, 2048
  br i1 %494, label %495, label %460, !llvm.loop !31

495:                                              ; preds = %460, %495
  %496 = phi i64 [ %528, %495 ], [ 0, %460 ]
  %497 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %496
  %498 = bitcast i16* %497 to <8 x i16>*
  %499 = load <8 x i16>, <8 x i16>* %498, align 16, !tbaa !24
  %500 = xor <8 x i16> %499, <i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584>
  %501 = add nuw nsw i64 %496, 4096
  %502 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %501
  %503 = bitcast i16* %502 to <8 x i16>*
  store <8 x i16> %500, <8 x i16>* %503, align 16, !tbaa !24
  %504 = or i64 %496, 8
  %505 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %504
  %506 = bitcast i16* %505 to <8 x i16>*
  %507 = load <8 x i16>, <8 x i16>* %506, align 16, !tbaa !24
  %508 = xor <8 x i16> %507, <i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584>
  %509 = add nuw nsw i64 %496, 4104
  %510 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %509
  %511 = bitcast i16* %510 to <8 x i16>*
  store <8 x i16> %508, <8 x i16>* %511, align 16, !tbaa !24
  %512 = or i64 %496, 16
  %513 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %512
  %514 = bitcast i16* %513 to <8 x i16>*
  %515 = load <8 x i16>, <8 x i16>* %514, align 16, !tbaa !24
  %516 = xor <8 x i16> %515, <i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584>
  %517 = add nuw nsw i64 %496, 4112
  %518 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %517
  %519 = bitcast i16* %518 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %519, align 16, !tbaa !24
  %520 = or i64 %496, 24
  %521 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %520
  %522 = bitcast i16* %521 to <8 x i16>*
  %523 = load <8 x i16>, <8 x i16>* %522, align 16, !tbaa !24
  %524 = xor <8 x i16> %523, <i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584, i16 -584>
  %525 = add nuw nsw i64 %496, 4120
  %526 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %525
  %527 = bitcast i16* %526 to <8 x i16>*
  store <8 x i16> %524, <8 x i16>* %527, align 16, !tbaa !24
  %528 = add nuw nsw i64 %496, 32
  %529 = icmp eq i64 %528, 4096
  br i1 %529, label %530, label %495, !llvm.loop !32

530:                                              ; preds = %495, %530
  %531 = phi i64 [ %563, %530 ], [ 0, %495 ]
  %532 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %531
  %533 = bitcast i16* %532 to <8 x i16>*
  %534 = load <8 x i16>, <8 x i16>* %533, align 16, !tbaa !24
  %535 = xor <8 x i16> %534, <i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228>
  %536 = add nuw nsw i64 %531, 8192
  %537 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %536
  %538 = bitcast i16* %537 to <8 x i16>*
  store <8 x i16> %535, <8 x i16>* %538, align 16, !tbaa !24
  %539 = or i64 %531, 8
  %540 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %539
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 16, !tbaa !24
  %543 = xor <8 x i16> %542, <i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228>
  %544 = add nuw nsw i64 %531, 8200
  %545 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %544
  %546 = bitcast i16* %545 to <8 x i16>*
  store <8 x i16> %543, <8 x i16>* %546, align 16, !tbaa !24
  %547 = or i64 %531, 16
  %548 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %547
  %549 = bitcast i16* %548 to <8 x i16>*
  %550 = load <8 x i16>, <8 x i16>* %549, align 16, !tbaa !24
  %551 = xor <8 x i16> %550, <i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228>
  %552 = add nuw nsw i64 %531, 8208
  %553 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %552
  %554 = bitcast i16* %553 to <8 x i16>*
  store <8 x i16> %551, <8 x i16>* %554, align 16, !tbaa !24
  %555 = or i64 %531, 24
  %556 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %555
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 16, !tbaa !24
  %559 = xor <8 x i16> %558, <i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228, i16 -1228>
  %560 = add nuw nsw i64 %531, 8216
  %561 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %560
  %562 = bitcast i16* %561 to <8 x i16>*
  store <8 x i16> %559, <8 x i16>* %562, align 16, !tbaa !24
  %563 = add nuw nsw i64 %531, 32
  %564 = icmp eq i64 %563, 8192
  br i1 %564, label %565, label %530, !llvm.loop !33

565:                                              ; preds = %530, %565
  %566 = phi i64 [ %598, %565 ], [ 0, %530 ]
  %567 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %566
  %568 = bitcast i16* %567 to <8 x i16>*
  %569 = load <8 x i16>, <8 x i16>* %568, align 16, !tbaa !24
  %570 = xor <8 x i16> %569, <i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200>
  %571 = add nuw nsw i64 %566, 16384
  %572 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %571
  %573 = bitcast i16* %572 to <8 x i16>*
  store <8 x i16> %570, <8 x i16>* %573, align 16, !tbaa !24
  %574 = or i64 %566, 8
  %575 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %574
  %576 = bitcast i16* %575 to <8 x i16>*
  %577 = load <8 x i16>, <8 x i16>* %576, align 16, !tbaa !24
  %578 = xor <8 x i16> %577, <i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200>
  %579 = add nuw nsw i64 %566, 16392
  %580 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %579
  %581 = bitcast i16* %580 to <8 x i16>*
  store <8 x i16> %578, <8 x i16>* %581, align 16, !tbaa !24
  %582 = or i64 %566, 16
  %583 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %582
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 16, !tbaa !24
  %586 = xor <8 x i16> %585, <i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200>
  %587 = add nuw nsw i64 %566, 16400
  %588 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %587
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %586, <8 x i16>* %589, align 16, !tbaa !24
  %590 = or i64 %566, 24
  %591 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %590
  %592 = bitcast i16* %591 to <8 x i16>*
  %593 = load <8 x i16>, <8 x i16>* %592, align 16, !tbaa !24
  %594 = xor <8 x i16> %593, <i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200, i16 -200>
  %595 = add nuw nsw i64 %566, 16408
  %596 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %595
  %597 = bitcast i16* %596 to <8 x i16>*
  store <8 x i16> %594, <8 x i16>* %597, align 16, !tbaa !24
  %598 = add nuw nsw i64 %566, 32
  %599 = icmp eq i64 %598, 16384
  br i1 %599, label %600, label %565, !llvm.loop !34

600:                                              ; preds = %565, %600
  %601 = phi i64 [ %633, %600 ], [ 0, %565 ]
  %602 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %601
  %603 = bitcast i16* %602 to <8 x i16>*
  %604 = load <8 x i16>, <8 x i16>* %603, align 16, !tbaa !24
  %605 = xor <8 x i16> %604, <i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338>
  %606 = add nuw nsw i64 %601, 32768
  %607 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %606
  %608 = bitcast i16* %607 to <8 x i16>*
  store <8 x i16> %605, <8 x i16>* %608, align 16, !tbaa !24
  %609 = or i64 %601, 8
  %610 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %609
  %611 = bitcast i16* %610 to <8 x i16>*
  %612 = load <8 x i16>, <8 x i16>* %611, align 16, !tbaa !24
  %613 = xor <8 x i16> %612, <i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338>
  %614 = add nuw nsw i64 %601, 32776
  %615 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %614
  %616 = bitcast i16* %615 to <8 x i16>*
  store <8 x i16> %613, <8 x i16>* %616, align 16, !tbaa !24
  %617 = or i64 %601, 16
  %618 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %617
  %619 = bitcast i16* %618 to <8 x i16>*
  %620 = load <8 x i16>, <8 x i16>* %619, align 16, !tbaa !24
  %621 = xor <8 x i16> %620, <i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338>
  %622 = add nuw nsw i64 %601, 32784
  %623 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %622
  %624 = bitcast i16* %623 to <8 x i16>*
  store <8 x i16> %621, <8 x i16>* %624, align 16, !tbaa !24
  %625 = or i64 %601, 24
  %626 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %625
  %627 = bitcast i16* %626 to <8 x i16>*
  %628 = load <8 x i16>, <8 x i16>* %627, align 16, !tbaa !24
  %629 = xor <8 x i16> %628, <i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338, i16 -26338>
  %630 = add nuw nsw i64 %601, 32792
  %631 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %630
  %632 = bitcast i16* %631 to <8 x i16>*
  store <8 x i16> %629, <8 x i16>* %632, align 16, !tbaa !24
  %633 = add nuw nsw i64 %601, 32
  %634 = icmp eq i64 %633, 32768
  br i1 %634, label %635, label %600, !llvm.loop !35

635:                                              ; preds = %600, %635
  %636 = phi i64 [ %660, %635 ], [ 0, %600 ]
  %637 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %636
  %638 = load i16, i16* %637, align 8, !tbaa !24
  %639 = zext i16 %638 to i64
  %640 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %639
  %641 = load i16, i16* %640, align 2, !tbaa !24
  store i16 %641, i16* %637, align 8, !tbaa !24
  %642 = or i64 %636, 1
  %643 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %642
  %644 = load i16, i16* %643, align 2, !tbaa !24
  %645 = zext i16 %644 to i64
  %646 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %645
  %647 = load i16, i16* %646, align 2, !tbaa !24
  store i16 %647, i16* %643, align 2, !tbaa !24
  %648 = or i64 %636, 2
  %649 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %648
  %650 = load i16, i16* %649, align 4, !tbaa !24
  %651 = zext i16 %650 to i64
  %652 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %651
  %653 = load i16, i16* %652, align 2, !tbaa !24
  store i16 %653, i16* %649, align 4, !tbaa !24
  %654 = or i64 %636, 3
  %655 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %654
  %656 = load i16, i16* %655, align 2, !tbaa !24
  %657 = zext i16 %656 to i64
  %658 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %657
  %659 = load i16, i16* %658, align 2, !tbaa !24
  store i16 %659, i16* %655, align 2, !tbaa !24
  %660 = add nuw nsw i64 %636, 4
  %661 = icmp eq i64 %660, 65536
  br i1 %661, label %738, label %635, !llvm.loop !36

662:                                              ; preds = %738
  %663 = load i16, i16* %13, align 2, !tbaa !24
  %664 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 65535
  store i16 %663, i16* %664, align 2, !tbaa !24
  %665 = bitcast %"struct.std::array"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 131072, i8* nonnull %665) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(131072) %665, i8* noundef nonnull align 16 dereferenceable(131072) %6, i64 131072, i1 false), !tbaa.struct !37
  %666 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %5, i64 0, i32 0, i64 0
  store i16 0, i16* %666, align 2, !tbaa !24
  br label %669

667:                                              ; preds = %708
  %668 = icmp ult i64 %670, 32768
  br i1 %668, label %669, label %732, !llvm.loop !39

669:                                              ; preds = %667, %662
  %670 = phi i64 [ 1, %662 ], [ %671, %667 ]
  %671 = shl i64 %670, 1
  %672 = icmp ult i64 %670, 8
  %673 = and i64 %670, -8
  %674 = icmp eq i64 %670, %673
  br label %675

675:                                              ; preds = %708, %669
  %676 = phi i64 [ %670, %669 ], [ %711, %708 ]
  %677 = phi i64 [ 0, %669 ], [ %709, %708 ]
  br i1 %672, label %706, label %678

678:                                              ; preds = %675
  %679 = add i64 %677, %673
  br label %680

680:                                              ; preds = %680, %678
  %681 = phi i64 [ 0, %678 ], [ %703, %680 ]
  %682 = add i64 %677, %681
  %683 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %5, i64 0, i32 0, i64 %682
  %684 = bitcast i16* %683 to <8 x i16>*
  %685 = load <8 x i16>, <8 x i16>* %684, align 2, !tbaa !24
  %686 = zext <8 x i16> %685 to <8 x i32>
  %687 = add nuw nsw <8 x i32> %686, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %688 = add nuw nsw i64 %682, %670
  %689 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %5, i64 0, i32 0, i64 %688
  %690 = bitcast i16* %689 to <8 x i16>*
  %691 = load <8 x i16>, <8 x i16>* %690, align 2, !tbaa !24
  %692 = zext <8 x i16> %691 to <8 x i32>
  %693 = sub nuw nsw <8 x i32> %687, %692
  %694 = add nuw nsw <8 x i32> %692, %686
  %695 = lshr <8 x i32> %694, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %696 = add nuw nsw <8 x i32> %695, %694
  %697 = trunc <8 x i32> %696 to <8 x i16>
  %698 = bitcast i16* %683 to <8 x i16>*
  store <8 x i16> %697, <8 x i16>* %698, align 2, !tbaa !24
  %699 = lshr <8 x i32> %693, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %700 = add nuw nsw <8 x i32> %699, %693
  %701 = trunc <8 x i32> %700 to <8 x i16>
  %702 = bitcast i16* %689 to <8 x i16>*
  store <8 x i16> %701, <8 x i16>* %702, align 2, !tbaa !24
  %703 = add nuw i64 %681, 8
  %704 = icmp eq i64 %703, %673
  br i1 %704, label %705, label %680, !llvm.loop !40

705:                                              ; preds = %680
  br i1 %674, label %708, label %706

706:                                              ; preds = %675, %705
  %707 = phi i64 [ %677, %675 ], [ %679, %705 ]
  br label %712

708:                                              ; preds = %712, %705
  %709 = add nuw nsw i64 %677, %671
  %710 = icmp ult i64 %709, 65536
  %711 = add nuw nsw i64 %676, %671
  br i1 %710, label %675, label %667, !llvm.loop !41

712:                                              ; preds = %706, %712
  %713 = phi i64 [ %730, %712 ], [ %707, %706 ]
  %714 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %5, i64 0, i32 0, i64 %713
  %715 = load i16, i16* %714, align 2, !tbaa !24
  %716 = zext i16 %715 to i32
  %717 = add nuw nsw i32 %716, 65535
  %718 = add nuw nsw i64 %713, %670
  %719 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %5, i64 0, i32 0, i64 %718
  %720 = load i16, i16* %719, align 2, !tbaa !24
  %721 = zext i16 %720 to i32
  %722 = sub nuw nsw i32 %717, %721
  %723 = add nuw nsw i32 %721, %716
  %724 = lshr i32 %723, 16
  %725 = add nuw nsw i32 %724, %723
  %726 = trunc i32 %725 to i16
  store i16 %726, i16* %714, align 2, !tbaa !24
  %727 = lshr i32 %722, 16
  %728 = add nuw nsw i32 %727, %722
  %729 = trunc i32 %728 to i16
  store i16 %729, i16* %719, align 2, !tbaa !24
  %730 = add nuw nsw i64 %713, 1
  %731 = icmp eq i64 %730, %676
  br i1 %731, label %708, label %712, !llvm.loop !42

732:                                              ; preds = %667
  %733 = bitcast %"class.std::tuple"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(131072) %733, i8* noundef nonnull align 2 dereferenceable(131072) %665, i64 131072, i1 false) #9, !tbaa.struct !37
  %734 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %0, i64 0, i32 0, i32 0, i32 1
  %735 = bitcast %"struct.std::_Head_base.2"* %734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(131072) %735, i8* noundef nonnull align 2 dereferenceable(131072) %9, i64 131072, i1 false) #9, !tbaa.struct !37
  %736 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %0, i64 0, i32 0, i32 1
  %737 = bitcast %"struct.std::_Head_base.3"* %736 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 2 dereferenceable(131072) %737, i8* noundef nonnull align 16 dereferenceable(131072) %6, i64 131072, i1 false) #9, !tbaa.struct !37
  call void @llvm.lifetime.end.p0i8(i64 131072, i8* nonnull %665) #9
  call void @llvm.lifetime.end.p0i8(i64 131072, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 131072, i8* nonnull %6) #9
  ret void

738:                                              ; preds = %635, %738
  %739 = phi i64 [ %763, %738 ], [ 0, %635 ]
  %740 = trunc i64 %739 to i16
  %741 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %739
  %742 = load i16, i16* %741, align 8, !tbaa !24
  %743 = zext i16 %742 to i64
  %744 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %743
  store i16 %740, i16* %744, align 2, !tbaa !24
  %745 = or i64 %739, 1
  %746 = trunc i64 %745 to i16
  %747 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %745
  %748 = load i16, i16* %747, align 2, !tbaa !24
  %749 = zext i16 %748 to i64
  %750 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %749
  store i16 %746, i16* %750, align 2, !tbaa !24
  %751 = or i64 %739, 2
  %752 = trunc i64 %751 to i16
  %753 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %751
  %754 = load i16, i16* %753, align 4, !tbaa !24
  %755 = zext i16 %754 to i64
  %756 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %755
  store i16 %752, i16* %756, align 2, !tbaa !24
  %757 = or i64 %739, 3
  %758 = trunc i64 %757 to i16
  %759 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %3, i64 0, i32 0, i64 %757
  %760 = load i16, i16* %759, align 2, !tbaa !24
  %761 = zext i16 %760 to i64
  %762 = getelementptr inbounds %"struct.std::array", %"struct.std::array"* %4, i64 0, i32 0, i64 %761
  store i16 %758, i16* %762, align 2, !tbaa !24
  %763 = add nuw nsw i64 %739, 4
  %764 = icmp eq i64 %763, 65536
  br i1 %764, label %662, label %738, !llvm.loop !44
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

declare i32 @__gxx_personality_v0(...)

; Function Attrs: mustprogress uwtable
define linkonce_odr void @_ZN6ec_cpp11AdditiveFFTINS_16f2e16_DescriptorEE9initalizeERKSt5tupleIJSt5arrayItLm65536EES5_S5_EE(%"struct.ec_cpp::AdditiveFFT"* noalias sret(%"struct.ec_cpp::AdditiveFFT") align 2 %0, %"class.std::tuple"* noundef nonnull align 2 dereferenceable(393216) %1) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca [15 x i16], align 16
  %4 = alloca [65535 x %"struct.ec_cpp::Additive"], align 16
  %5 = bitcast [15 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %5) #9
  %6 = bitcast [65535 x %"struct.ec_cpp::Additive"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 131070, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(131070) %6, i8 0, i64 131070, i1 false)
  %7 = bitcast [15 x i16]* %3 to <8 x i16>*
  store <8 x i16> <i16 2, i16 4, i16 8, i16 16, i16 32, i16 64, i16 128, i16 256>, <8 x i16>* %7, align 16, !tbaa !24
  %8 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 8
  store i16 512, i16* %8, align 16, !tbaa !24
  %9 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 9
  store i16 1024, i16* %9, align 2, !tbaa !24
  %10 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 10
  store i16 2048, i16* %10, align 4, !tbaa !24
  %11 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 11
  store i16 4096, i16* %11, align 2, !tbaa !24
  %12 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 12
  store i16 8192, i16* %12, align 8, !tbaa !24
  %13 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 13
  store i16 16384, i16* %13, align 2, !tbaa !24
  %14 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 14
  store i16 -32768, i16* %14, align 4, !tbaa !24
  br label %17

15:                                               ; preds = %97, %47
  %16 = icmp eq i64 %19, 15
  br i1 %16, label %102, label %17, !llvm.loop !45

17:                                               ; preds = %15, %2
  %18 = phi i64 [ %19, %15 ], [ 0, %2 ]
  %19 = add nuw nsw i64 %18, 1
  %20 = shl i64 2, %18
  %21 = shl nsw i64 -1, %18
  %22 = xor i64 %21, -1
  %23 = getelementptr inbounds [65535 x %"struct.ec_cpp::Additive"], [65535 x %"struct.ec_cpp::Additive"]* %4, i64 0, i64 %22, i32 0
  store i16 0, i16* %23, align 2, !tbaa.struct !46
  br label %54

24:                                               ; preds = %62, %54
  %25 = icmp ult i64 %55, 14
  br i1 %25, label %54, label %26, !llvm.loop !47

26:                                               ; preds = %24
  %27 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 %18
  %28 = load i16, i16* %27, align 2, !tbaa !24
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %26
  %31 = xor i16 %28, 1
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %32
  %34 = load i16, i16* %33, align 2, !tbaa !24
  %35 = zext i16 %28 to i64
  %36 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %35
  %37 = load i16, i16* %36, align 2, !tbaa !24
  %38 = zext i16 %37 to i32
  %39 = zext i16 %34 to i32
  %40 = add nuw nsw i32 %38, %39
  %41 = and i32 %40, 65535
  %42 = lshr i32 %40, 16
  %43 = add nuw nsw i32 %41, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 %44
  %46 = load i16, i16* %45, align 2, !tbaa !24
  br label %47

47:                                               ; preds = %26, %30
  %48 = phi i16 [ %46, %30 ], [ 0, %26 ]
  %49 = zext i16 %48 to i64
  %50 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %49
  %51 = load i16, i16* %50, align 2, !tbaa !24
  %52 = xor i16 %51, -1
  store i16 %52, i16* %27, align 2, !tbaa !24
  %53 = icmp ult i64 %18, 14
  br i1 %53, label %71, label %15

54:                                               ; preds = %17, %24
  %55 = phi i64 [ %56, %24 ], [ %18, %17 ]
  %56 = add nuw nsw i64 %55, 1
  %57 = shl i64 2, %55
  %58 = icmp ugt i64 %57, %22
  br i1 %58, label %59, label %24

59:                                               ; preds = %54
  %60 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 %55
  %61 = load i16, i16* %60, align 2, !tbaa !24
  br label %62

62:                                               ; preds = %59, %62
  %63 = phi i64 [ %22, %59 ], [ %69, %62 ]
  %64 = getelementptr inbounds [65535 x %"struct.ec_cpp::Additive"], [65535 x %"struct.ec_cpp::Additive"]* %4, i64 0, i64 %63, i32 0
  %65 = load i16, i16* %64, align 2, !tbaa !48
  %66 = xor i16 %61, %65
  %67 = add i64 %63, %57
  %68 = getelementptr inbounds [65535 x %"struct.ec_cpp::Additive"], [65535 x %"struct.ec_cpp::Additive"]* %4, i64 0, i64 %67, i32 0
  store i16 %66, i16* %68, align 2, !tbaa.struct !46
  %69 = add i64 %63, %20
  %70 = icmp ult i64 %69, %57
  br i1 %70, label %62, label %24, !llvm.loop !50

71:                                               ; preds = %47, %97
  %72 = phi i64 [ %99, %97 ], [ %19, %47 ]
  %73 = getelementptr inbounds [15 x i16], [15 x i16]* %3, i64 0, i64 %72
  %74 = load i16, i16* %73, align 2, !tbaa !24
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %97, label %76

76:                                               ; preds = %71
  %77 = xor i16 %74, 1
  %78 = zext i16 %77 to i64
  %79 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %78
  %80 = load i16, i16* %79, align 2, !tbaa !24
  %81 = zext i16 %80 to i32
  %82 = load i16, i16* %27, align 2, !tbaa !24
  %83 = zext i16 %82 to i32
  %84 = add nuw nsw i32 %83, %81
  %85 = urem i32 %84, 65535
  %86 = zext i16 %74 to i64
  %87 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %86
  %88 = load i16, i16* %87, align 2, !tbaa !24
  %89 = zext i16 %88 to i32
  %90 = add nuw nsw i32 %85, %89
  %91 = and i32 %90, 65535
  %92 = lshr i32 %90, 16
  %93 = add nuw nsw i32 %91, %92
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 %94
  %96 = load i16, i16* %95, align 2, !tbaa !24
  br label %97

97:                                               ; preds = %71, %76
  %98 = phi i16 [ %96, %76 ], [ 0, %71 ]
  store i16 %98, i16* %73, align 2, !tbaa !24
  %99 = add nuw nsw i64 %72, 1
  %100 = icmp ult i64 %72, 14
  br i1 %100, label %71, label %15, !llvm.loop !51

101:                                              ; preds = %102
  call void @llvm.lifetime.end.p0i8(i64 131070, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %5) #9
  ret void

102:                                              ; preds = %15, %102
  %103 = phi i64 [ %138, %102 ], [ 0, %15 ]
  %104 = getelementptr inbounds [65535 x %"struct.ec_cpp::Additive"], [65535 x %"struct.ec_cpp::Additive"]* %4, i64 0, i64 %103, i32 0
  %105 = load i16, i16* %104, align 2, !tbaa !48
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %106
  %108 = load i16, i16* %107, align 2, !tbaa !24
  %109 = getelementptr inbounds %"struct.ec_cpp::AdditiveFFT", %"struct.ec_cpp::AdditiveFFT"* %0, i64 0, i32 0, i64 %103
  store i16 %108, i16* %109, align 2, !tbaa !24
  %110 = add nuw nsw i64 %103, 1
  %111 = getelementptr inbounds [65535 x %"struct.ec_cpp::Additive"], [65535 x %"struct.ec_cpp::Additive"]* %4, i64 0, i64 %110, i32 0
  %112 = load i16, i16* %111, align 2, !tbaa !48
  %113 = zext i16 %112 to i64
  %114 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %113
  %115 = load i16, i16* %114, align 2, !tbaa !24
  %116 = getelementptr inbounds %"struct.ec_cpp::AdditiveFFT", %"struct.ec_cpp::AdditiveFFT"* %0, i64 0, i32 0, i64 %110
  store i16 %115, i16* %116, align 2, !tbaa !24
  %117 = add nuw nsw i64 %103, 2
  %118 = getelementptr inbounds [65535 x %"struct.ec_cpp::Additive"], [65535 x %"struct.ec_cpp::Additive"]* %4, i64 0, i64 %117, i32 0
  %119 = load i16, i16* %118, align 2, !tbaa !48
  %120 = zext i16 %119 to i64
  %121 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %120
  %122 = load i16, i16* %121, align 2, !tbaa !24
  %123 = getelementptr inbounds %"struct.ec_cpp::AdditiveFFT", %"struct.ec_cpp::AdditiveFFT"* %0, i64 0, i32 0, i64 %117
  store i16 %122, i16* %123, align 2, !tbaa !24
  %124 = add nuw nsw i64 %103, 3
  %125 = getelementptr inbounds [65535 x %"struct.ec_cpp::Additive"], [65535 x %"struct.ec_cpp::Additive"]* %4, i64 0, i64 %124, i32 0
  %126 = load i16, i16* %125, align 2, !tbaa !48
  %127 = zext i16 %126 to i64
  %128 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %127
  %129 = load i16, i16* %128, align 2, !tbaa !24
  %130 = getelementptr inbounds %"struct.ec_cpp::AdditiveFFT", %"struct.ec_cpp::AdditiveFFT"* %0, i64 0, i32 0, i64 %124
  store i16 %129, i16* %130, align 2, !tbaa !24
  %131 = add nuw nsw i64 %103, 4
  %132 = getelementptr inbounds [65535 x %"struct.ec_cpp::Additive"], [65535 x %"struct.ec_cpp::Additive"]* %4, i64 0, i64 %131, i32 0
  %133 = load i16, i16* %132, align 2, !tbaa !48
  %134 = zext i16 %133 to i64
  %135 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %134
  %136 = load i16, i16* %135, align 2, !tbaa !24
  %137 = getelementptr inbounds %"struct.ec_cpp::AdditiveFFT", %"struct.ec_cpp::AdditiveFFT"* %0, i64 0, i32 0, i64 %131
  store i16 %136, i16* %137, align 2, !tbaa !24
  %138 = add nuw nsw i64 %103, 5
  %139 = icmp eq i64 %138, 65535
  br i1 %139, label %101, label %102, !llvm.loop !52
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_ec_cpp.cpp() #2 section ".text.startup" {
  %1 = alloca %class.anon, align 1
  %2 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #9
  call void @_ZNK6ec_cpp16f2e16_Descriptor7kTablesMUlvE_clEv(%"class.std::tuple"* nonnull sret(%"class.std::tuple") align 2 getelementptr inbounds (%"struct.ec_cpp::f2e16_Descriptor", %"struct.ec_cpp::f2e16_Descriptor"* @_ZN6ec_cpp16field_descriptorE, i64 0, i32 0), %class.anon* noundef nonnull align 1 dereferenceable(1) %1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #9
  store %"struct.ec_cpp::f2e16_Descriptor"* @_ZN6ec_cpp16field_descriptorE, %"struct.ec_cpp::f2e16_Descriptor"** getelementptr inbounds (%"struct.ec_cpp::PolyEncoder", %"struct.ec_cpp::PolyEncoder"* @_ZN6ec_cpp12poly_encoderE, i64 0, i32 0), align 8, !tbaa !17
  call void @_ZN6ec_cpp11AdditiveFFTINS_16f2e16_DescriptorEE9initalizeERKSt5tupleIJSt5arrayItLm65536EES5_S5_EE(%"struct.ec_cpp::AdditiveFFT"* nonnull sret(%"struct.ec_cpp::AdditiveFFT") align 2 getelementptr inbounds (%"struct.ec_cpp::PolyEncoder", %"struct.ec_cpp::PolyEncoder"* @_ZN6ec_cpp12poly_encoderE, i64 0, i32 1), %"class.std::tuple"* noundef nonnull align 2 dereferenceable(393216) getelementptr inbounds (%"struct.ec_cpp::f2e16_Descriptor", %"struct.ec_cpp::f2e16_Descriptor"* @_ZN6ec_cpp16field_descriptorE, i64 0, i32 0))
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { mustprogress nofree nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { inlinehint uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #5 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #6 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{!"Ubuntu clang version 14.0.0-1ubuntu1.1"}
!4 = !{!5, !6, i64 0}
!5 = !{!"_ZTSNSt8__detail9__variant14_UninitializedIN6ec_cpp5ErrorELb1EEE", !6, i64 0}
!6 = !{!"_ZTSN6ec_cpp5ErrorE", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{i64 1, i64 65}
!10 = !{i64 0, i64 65}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6ec_cpp11ReedSolomonINS_11PolyEncoderINS_16f2e16_DescriptorEEEE6createEmmRKS3_: argument 0"}
!13 = distinct !{!13, !"_ZN6ec_cpp11ReedSolomonINS_11PolyEncoderINS_16f2e16_DescriptorEEEE6createEmmRKS3_"}
!14 = !{i64 0, i64 8, !15, i64 8, i64 8, !15, i64 16, i64 8, !15, i64 24, i64 8, !17}
!15 = !{!16, !16, i64 0}
!16 = !{!"long", !7, i64 0}
!17 = !{!18, !18, i64 0}
!18 = !{!"any pointer", !7, i64 0}
!19 = !{i64 0, i64 8, !15, i64 8, i64 8, !15, i64 16, i64 8, !17}
!20 = !{i64 0, i64 8, !15, i64 8, i64 8, !17}
!21 = !{i64 0, i64 8, !17}
!22 = !{!23, !7, i64 32}
!23 = !{!"_ZTSNSt8__detail9__variant16_Variant_storageILb1EJN6ec_cpp11ReedSolomonINS2_11PolyEncoderINS2_16f2e16_DescriptorEEEEENS2_5ErrorEEEE", !7, i64 0, !7, i64 32}
!24 = !{!25, !25, i64 0}
!25 = !{!"short", !7, i64 0}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.mustprogress"}
!28 = distinct !{!28, !27, !29}
!29 = !{!"llvm.loop.isvectorized", i32 1}
!30 = distinct !{!30, !27, !29}
!31 = distinct !{!31, !27, !29}
!32 = distinct !{!32, !27, !29}
!33 = distinct !{!33, !27, !29}
!34 = distinct !{!34, !27, !29}
!35 = distinct !{!35, !27, !29}
!36 = distinct !{!36, !27}
!37 = !{i64 0, i64 131072, !38}
!38 = !{!7, !7, i64 0}
!39 = distinct !{!39, !27}
!40 = distinct !{!40, !27, !29}
!41 = distinct !{!41, !27}
!42 = distinct !{!42, !27, !43, !29}
!43 = !{!"llvm.loop.unroll.runtime.disable"}
!44 = distinct !{!44, !27}
!45 = distinct !{!45, !27}
!46 = !{i64 0, i64 2, !24}
!47 = distinct !{!47, !27}
!48 = !{!49, !25, i64 0}
!49 = !{!"_ZTSN6ec_cpp8AdditiveINS_16f2e16_DescriptorEEE", !25, i64 0}
!50 = distinct !{!50, !27}
!51 = distinct !{!51, !27}
!52 = distinct !{!52, !27}
